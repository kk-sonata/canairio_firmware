#!/bin/bash
################################################################
# CanAirIO Deploy Util
# ====================
# 
# (C) @hpsaturn 2022
#
# Original tool for deploy flavors of CanAirIO firmware.
#
# REVISIONS
# +++++++++
# 20220713 General changes for try to hava a better generic tool 
################################################################

SRC_REV=`cat platformio.ini | grep 'revision =' | awk '{print $3}'`
SRC_VER=`cat platformio.ini | grep 'version =' | awk '{print $3}'`
TARGET=`cat platformio.ini | grep 'target =' | awk '{print $3}'`
DATE=`date +%Y%m%d`
OUTDIR=".pio/build"
RELDIR="releases"
BINDIR="binaries"
MANIFEST="manifest"
NAME="canairio"
DEFAULT="TTGO_T7"
OWNER="kike-canaries"
REPO="canairio_firmware"
INSDIR=$RELDIR/installer/${NAME}_installer

flavors="TTGO_T7 WEMOSOLED HELTEC TTGO_TQ ESP32DEVKIT TTGO_TDISPLAY ESP32PICOD4 M5STICKCPLUS M5ATOM M5PICOD4"

showHelp () {
  echo ""
  echo "************************************************"
  echo "** Build release flavor or installer package **"
  echo "************************************************"
  echo ""
  echo "Usage: ./build [flavor|list|all|installer|publish|help|print|list|clean]"
  echo ""
  echo "example: ./build clean"
  echo "example: ./build all"
  echo -n "example: ./build "; echo ${flavors} | awk '{print $1}'
  echo "example: ./build installer"
  echo ""
  echo "Supported boards: "
  echo "./build list"
  echo ""
  echo "Build installer option will build a installer package for Linux"
  echo "with OTA support and USB support"
  echo ""
}

updateInstallerBinaries () {
  echo "Update installer binaries.."
  cp $OUTDIR/$DEFAULT/partitions.bin $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_40m.bin $INSDIR/system/
  cp ~/.platformio/packages/tool-esptoolpy/esptool.py $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/espota.py $INSDIR/system/
  curl https://raw.githubusercontent.com/kike-canaries/canairio_firmware/master/releases/installer/canairio_installer/install.sh -o $INSDIR/install.sh
  chmod 755 $INSDIR/install.sh
}

updateFlavorBinaries() {
  echo "Update installer flavors.."
  rm -f $INSDIR/*.bin
  rm -f $INSDIR/*.py   # old installer
  cp $RELDIR/$BINDIR/*/*${SRC_REV}.bin $INSDIR/
}

clean () {
  echo "Clean installer directory.."
  rm -rf $RELDIR/$BINDIR
  rm -rf $RELDIR/$MANIFEST
  rm -f $INSDIR/*.bin
  rm -f $INSDIR/*.py   # old installer
  for flavor in $flavors; do
    echo "Clean flavor $flavor.."
    pio run -s -e $flavor -t clean
  done
}

build () {
  echo ""
  echo "***********************************************"
  echo "** Building $1"
  echo "***********************************************"
  echo ""

  pio run -s -e $1

  echo ""
  echo "***********************************************"
  echo "** Firmware $1 output:"
  echo -n "** MD5:"
  FIRMDIR=$RELDIR/$BINDIR/$1
  mkdir -p $FIRMDIR 
  cp $OUTDIR/$1/firmware.bin $FIRMDIR/${NAME}_${1}_rev${SRC_REV}.bin
  md5sum $FIRMDIR/${NAME}_${1}_rev${SRC_REV}.bin
  echo "***********************************************"
  echo ""
}

buildInstaller () {
  echo "***********************************************"
  echo "** Building installer with target: $TARGET"
  echo "***********************************************"
  echo ""
  mkdir -p $INSDIR/system
  updateInstallerBinaries
  updateFlavorBinaries
  printOutput
  cd $INSDIR/..
  rm -f ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
  zip -r ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip ${NAME}_installer
  echo ""
  du -hs ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
  echo ""
}

publish_release () {
  cd $INSDIR/..
  COMMIT_LOG=`git log -1 --format='%ci %H %s'`
  github-release upload --owner ${OWNER} --repo ${REPO} --tag "rev${SRC_REV}" --release-name "rev${SRC_REV} v${SRC_VER}" --body "${COMMIT_LOG}" ${NAME}_${TARGET}_rev${SRC_REV}_${DATE}.zip
}

publish_release_ota () {
  cd $INSDIR
  scp -P $canairio_port *.bin $canairio_host:$canairio_target/$TARGET
  scp -P $canairio_port ../../$MANIFEST/$TARGET/*.json $canairio_host:$canairio_target/$TARGET
}

printOutput () {
  echo ""
  FIRMDIR=$RELDIR/$BINDIR
  if [ ! -d "$FIRMDIR" ]; then
    echo "Please first build any flavor!"
    echo ""
    exit 1
  fi
  mkdir -p $INSDIR
  rm -f $INSDIR/md5output.txt
  touch $INSDIR/md5output.txt
  cd $FIRMDIR
  for flavor in *; do
    MD5FLAVOR=`md5sum $flavor/${NAME}_${flavor}_rev${SRC_REV}.bin`
    echo $MD5FLAVOR >> ../../$INSDIR/md5output.txt
  done
  cat ../../$INSDIR/md5output.txt
  cd ../..
  echo "" 
}


if [ "$1" = "" ]; then
  showHelp
else
  case "$1" in
    clean)
      clean
      ;;

    installer)
      buildInstaller
      ;;

    help)
      showHelp
      ;;

    --help)
      showHelp
      ;;

    -help)
      showHelp
      ;;

    print)
      printOutput
      ;;

    all)
      for flavor in $flavors; do
          build $flavor
      done     
      printOutput
      ;;

    publish)
      publish_release
      ;;

    otatrigger)
      publish_release_ota
      ;;

    list)
      for flavor in $flavors; do
          echo $flavor
      done
      ;;

    *)
      if [[ $flavors == *"$1"* ]]; then
        build $1
      else
        echo ""
        echo "ERROR: Flavor not found!"
        echo ""
        echo "Please check flavor parameter with 'list' command"
        echo ""
      fi
      ;;
  esac
fi

exit 0

